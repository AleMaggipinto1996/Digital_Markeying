theme_minimal()+
labs(y="Numero di campagne attivate", x="Tipologia di Campagna")+
ggtitle("Tipologia di campagna" )
plot_df5_TYP_CAMP_distribution
df_5_camp_cat_clean
View(plot_df_4_p_flag_mkt_distrib)
plot_df5_TYP_CAMP_distribution <- ggplot(df_5_camp_cat_type_camp, aes(x=TYP_CAMP,y=PERCENT))+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()+
labs(y="Numero di campagne attivate", x="Tipologia di Campagna")+
ggtitle("Tipologia di campagna" )
plot_df5_TYP_CAMP_distribution
ggplotly(plot_df5_TYP_CAMP_distribution)
df_5_camp_cat_type_camp <- df_5_camp_cat_clean %>%
group_by(TYP_CAMP) %>%
dplyr::summarize(TOT_IDs = n_distinct(ID_CAMP)) %>%
mutate(PERCENT = TOT_IDs/sum(TOT_IDs)) %>%
arrange(desc(PERCENT)*100)
df_5_camp_cat_type_camp
plot_df5_TYP_CAMP_distribution <- ggplot(df_5_camp_cat_type_camp, aes(x=TYP_CAMP,y=PERCENT))+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()+
labs(y="Numero di campagne attivate", x="Tipologia di Campagna")+
ggtitle("Tipologia di campagna" )
ggplotly(plot_df5_TYP_CAMP_distribution)
df_5_camp_cat_type_camp <- df_5_camp_cat_clean %>%
group_by(TYP_CAMP) %>%
dplyr::summarize(TOT_IDs = n_distinct(ID_CAMP)) %>%
mutate(PERCENT = TOT_IDs/sum(TOT_IDs)*100) %>%
arrange(desc(PERCENT))
df_5_camp_cat_type_camp
plot_df5_TYP_CAMP_distribution <- ggplot(df_5_camp_cat_type_camp, aes(x=TYP_CAMP,y=PERCENT))+
geom_bar(stat="identity", fill="steelblue")+
theme_minimal()+
labs(y="Numero di campagne attivate", x="Tipologia di Campagna")+
ggtitle("Tipologia di campagna" )
ggplotly(plot_df5_TYP_CAMP_distribution)
df6_dist_opened <- df_6_persone %>%
group_by(OPENED) %>%
summarize(TOT_EVENTs = n_distinct(ID_EVENT_S)
, TOT_CLIs = n_distinct(ID_CLI)) %>%
mutate(TYP_CAMP = 'ALL') %>%
mutate(PERCENT_EVENTs = TOT_EVENTs/df6_overview$TOT_EVENTs*100
, PERCENT_CLIs = TOT_CLIs/df6_overview$TOT_CLIs)
df6_dist_opened
## plot aggregate
plot_df6_dist_opened <- (
ggplot(data=df6_dist_opened
, aes(fill=OPENED, x=TYP_CAMP, y=PERCENT_EVENTs)) +
geom_bar(stat="identity", position="fill") +
theme_minimal()
)
plot_df6_dist_opened
plot_df6_dist_opened
ggplotly(plot_df6_dist_opened)
df6_dist_opened <- df_6_persone %>%
group_by(OPENED) %>%
summarize(TOT_EVENTs = n_distinct(ID_EVENT_S)
, TOT_CLIs = n_distinct(ID_CLI)) %>%
mutate(TYP_CAMP = 'ALL') %>%
mutate(PERCENT_EVENTs = (TOT_EVENTs/df6_overview$TOT_EVENTs)*100
, PERCENT_CLIs = TOT_CLIs/df6_overview$TOT_CLIs)
df6_dist_opened
plot_df6_dist_opened <- (
ggplot(data=df6_dist_opened
, aes(fill=OPENED, x=TYP_CAMP, y=PERCENT_EVENTs)) +
geom_bar(stat="identity", position="fill") +
theme_minimal()
)
ggplotly(plot_df6_dist_opened)
plot_df6_dist_openedbytyp
plot_df6_dist_openedbytyp_percent
ggplotly(plot_df6_dist_openedbytyp_percent)
ggplotly(plot_df6_dist_openedbytyp)
plot_df6_dist_daystoopen
plot_df6_dist_daystoopen_vs_cumulate
ggplotly(plot_df6_dist_daystoopen_vs_cumulate)
plot_df6_dist_clickedbytyp
ggplotly(plot_df6_dist_clickedbytyp)
plot_df6_dist_clickedbytyp_percent
ggplotly(plot_df6_dist_clickedbytyp_percent)
plot_df6_dist_failedbytyp
ggplotly(plot_df6_dist_failedbytyp_percent)
plot_df6_dist_num_opens
ggplotly(plot_df6_dist_num_opens)
ggplotly(plot_dist_df6_num_opens)
plot_df6_dist_num_clicks
ggplotly(plot_df6_dist_num_clicks)
ggplotly(plot_dist_df6_num_clicks)
ggplotly(plot_df7_dist_hour_percent)
ggplotly(plot_df7_dist_dep)
df7_avgimpscntcli
plot_df7_avgscntcli
plot_df7_avgimpcli
df7_dist_avgimprep
df7_dist_avgimprep[which.max(df7_dist_avgimprep$IMPORTO_MEDIO),]
df7_dist_avgimprep[which.min(df7_dist_avgimprep$IMPORTO_MEDIO),]
df7_dist_avgscntrep <- df_7_tic_clean %>% filter(DIREZIONE==1)  %>% group_by(COD_REPARTO) %>%
summarise(SCONTO_MEDIO = mean(SCONTO))
ggplot(df7_dist_avgimprep,aes(x=COD_REPARTO,y=IMPORTO_MEDIO))+
geom_bar(stat = "identity",fill="coral")+
theme_minimal()
ggplot(df7_dist_avgscntrep,aes(x=COD_REPARTO,y=SCONTO_MEDIO))+
geom_bar(stat = "identity",fill="lightgreen")+
theme_minimal()
df_for_next_purchase_curve
plot_df7_nxtpurch
df7_dist_purch_cat
df7_dist_purch_cat
df7_dist_avgimprep <- df_7_persone %>% group_by(COD_REPARTO) %>%
summarise(IMPORTO_MEDIO = mean(IMPORTO_LORDO))
df7_dist_avgimprep
df7_avgil <- df_7_persone %>% group_by(COD_REPARTO) %>%
summarise(IMPORTO_MEDIO = mean(IMPORTO_LORDO))
df7_avgilsc
df7_avgil [which.max(df7_avgilsc $IMPORTO_MEDIO),]
df7_avgil [which.min(df7_avgilsc $IMPORTO_MEDIO),]
df7_avgsc <- df_7_persone %>% filter(DIREZIONE==1)  %>% group_by(COD_REPARTO) %>%
summarise(SCONTO_MEDIO = mean(SCONTO))
df7_avgil <- df_7_persone %>% group_by(COD_REPARTO) %>%
summarise(IMPORTO_MEDIO = mean(IMPORTO_LORDO))
df7_avgil
df7_avgil [which.max(df7_avgil$IMPORTO_MEDIO),]
df7_avgil [which.min(df7_avgil$IMPORTO_MEDIO),]
df7_avgsc <- df_7_persone %>% filter(DIREZIONE==1)  %>% group_by(COD_REPARTO) %>%
summarise(SCONTO_MEDIO = mean(SCONTO))
df7_avgsc[which.max(df7_dist_avgsc$SCONTO_MEDIO),]
df7_avgsc[which.min(df7_dist_avgsc$SCONTO_MEDIO),]
df7_avgsc <- df_7_persone %>% filter(DIREZIONE==1)  %>% group_by(COD_REPARTO) %>%
summarise(SCONTO_MEDIO = mean(SCONTO))
df7_avgsc[which.max(df7_avgsc$SCONTO_MEDIO),]
df7_avgsc[which.min(df7_avgsc$SCONTO_MEDIO),]
ggplot(df7_avgiml,aes(x=COD_REPARTO,y=IMPORTO_MEDIO))+
geom_bar(stat = "identity",fill="red")+
theme_minimal()
ggplot(df7_dist_avgsc,aes(x=COD_REPARTO,y=SCONTO_MEDIO))+
geom_bar(stat = "identity",fill="blue")+
theme_minimal()
IL<-ggplot(df7_avgil,aes(x=COD_REPARTO,y=IMPORTO_MEDIO))+
geom_bar(stat = "identity",fill="red")+
theme_minimal()
SC<-ggplot(df7_avgsc,aes(x=COD_REPARTO,y=SCONTO_MEDIO))+
geom_bar(stat = "identity",fill="blue")+
theme_minimal()
IL<-ggplot(df7_avgil,aes(x=COD_REPARTO,y=IMPORTO_MEDIO))+
geom_bar(stat = "identity",fill="red")+
theme_minimal()
IL
ggplotly(IL)
ggplotly(IL)
SC<-ggplot(df7_avgsc,aes(x=COD_REPARTO,y=SCONTO_MEDIO))+
geom_bar(stat = "identity",fill="blue")+
theme_minimal()
ggplotly(IL)
SC<-ggplot(df7_avgsc,aes(x=COD_REPARTO,y=SCONTO_MEDIO))+
geom_bar(stat = "identity",fill="blue")+
theme_minimal()
ggplotly(SC)
ggplot(df7_dist_articolo,aes(x=ID_ARTICOLO,y=TOT_SCONTRINI))+
geom_bar(stat = "identity")
df7_dist_articolo<-df_7_tic_clean_final %>% group_by(ID_ARTICOLO,DIREZIONE) %>%
summarise(TOT_SCONTRINI = n_distinct(ID_SCONTRINO),
TOT_CLIENTI = n_distinct(ID_CLI))
df7_dist_articolo[which.max(df7_dist_articolo$TOT_SCONTRINI),]
#L'articolo pi? acquistato ? il 33700716, acquistato 57806 volte
#da 36273 clienti diversi
df7_dist_articolo
ggplot(df7_dist_articolo,aes(x=ID_ARTICOLO,y=TOT_SCONTRINI))+
geom_bar(stat = "identity")
df7_dist_articolo<-df_7_tic_clean_final %>% group_by(ID_ARTICOLO,DIREZIONE) %>%
summarise(TOT_SCONTRINI = n_distinct(ID_SCONTRINO),
TOT_CLIENTI = n_distinct(ID_CLI))
df7_dist_articolo[which.max(df7_dist_articolo$TOT_SCONTRINI),]
df7_articolo_max_tics<-df_7_persone %>% group_by(ID_ARTICOLO,DIREZIONE) %>%
summarise(TOT_SCONTRINI = n_distinct(ID_SCONTRINO),
TOT_CLIENTI = n_distinct(ID_CLI))
df7_articolo_max_tics[which.max(df7_articolo$TOT_SCONTRINI),]
df7_articolo_max_tics<-df_7_persone %>% group_by(ID_ARTICOLO,DIREZIONE) %>%
summarise(TOT_SCONTRINI = n_distinct(ID_SCONTRINO),
TOT_CLIENTI = n_distinct(ID_CLI))
df7_articolo_max_tics[which.max(df7_articolo_max_tics$TOT_SCONTRINI),]
df7_purch <- df_7_persone %>% filter(DIREZIONE == 1) %>%
group_by(ID_CLI) %>%
summarise(TOT_ACQUISTI = n_distinct(ID_SCONTRINO)) %>%
arrange(desc(TOT_ACQUISTI))
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "dai 5 ai 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "dai 25 ai 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "dai 50 ai 100",
(TOT_ACQUISTI>=100) ~ "pi? di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 20 a 50","da 50 a 100",
"piu' di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
plot_df7_sub_purch <- ggplot(df7_sub_purch,aes(CAT,TOT))+
geom_bar(fill="darkblue",stat = "identity",width=0.4)+
xlab("N째 acquisti")+
ylab("N째 clienti")
plot_df7_dist_purch_cat
plot_df7_sub_purch <- ggplot(df7_sub_purch,aes(CAT,TOT))+
geom_bar(fill="red4",stat = "identity",width=0.4)+
xlab("N째 acquisti")+
ylab("N째 clienti")
plot_df7_dist_purch_cat
plot_df7_sub_purch
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "dai 5 ai 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "dai 25 ai 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "dai 50 ai 100",
(TOT_ACQUISTI>=100) ~ "pi? di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 20 a 50","da 50 a 100",
"piu' di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
df7_purch <- df_7_persone %>% filter(DIREZIONE == 1) %>%
group_by(ID_CLI) %>%
summarise(TOT_ACQUISTI = n_distinct(ID_SCONTRINO)) %>%
arrange(desc(TOT_ACQUISTI))
df7_purch
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "dai 5 ai 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "dai 25 ai 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "dai 50 ai 100",
(TOT_ACQUISTI>=100) ~ "pi? di 100"))
df7_sub_purch
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 20 a 50","da 50 a 100",
"piu' di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
df7_purch <- df_7_persone %>% filter(DIREZIONE == 1) %>%
group_by(ID_CLI) %>%
summarise(TOT_ACQUISTI = n_distinct(ID_SCONTRINO)) %>%
arrange(desc(TOT_ACQUISTI))
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "dai 5 ai 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "dai 25 ai 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "dai 50 ai 100",
(TOT_ACQUISTI>=100) ~ "pi? di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 25 a 50","da 50 a 100",
"piu' di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
plot_df7_sub_purch <- ggplot(df7_sub_purch,aes(CAT,TOT))+
geom_bar(fill="red4",stat = "identity",width=0.4)+
xlab("N째 acquisti")+
ylab("N째 clienti")
plot_df7_sub_purch
plot_df7_sub_purch
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "dai 5 ai 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "dai 25 ai 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "dai 50 ai 100",
(TOT_ACQUISTI>=100) ~ "pi첫 di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 25 a 50","da 50 a 100",
"piu' di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "dai 10 ai 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "dai 25 ai 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "dai 50 ai 100",
(TOT_ACQUISTI>=100) ~ "pi첫 di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 25 a 50","da 50 a 100",
"piu' di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
f7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "da 10 a 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "da 25 a 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "da 50 a 100",
(TOT_ACQUISTI>=100) ~ "pi첫 di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 25 a 50","da 50 a 100",
"piu' di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "da 10 a 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "da 25 a 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "da 50 a 100",
(TOT_ACQUISTI>=100) ~ "pi첫 di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 25 a 50","da 50 a 100",
"piu' di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "da 10 a 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "da 25 a 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "da 50 a 100",
(TOT_ACQUISTI>=100) ~ "pi첫 di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 25 a 50","da 50 a 100",
"pi첫 di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
plot_df7_sub_purch <- ggplot(df7_sub_purch,aes(CAT,TOT))+
geom_bar(fill="red4",stat = "identity",width=0.4)+
xlab("N째 acquisti")+
ylab("N째 clienti")
plot_df7_sub_purch
library(dplyr)
#### OPTIONS ####
options(scipen=999)
set.seed(123456)
#### LIBRARIES ####
library(dplyr)
library(magrittr)
library(ggplot2)
library(forcats)
library(lubridate)
library(RQuantLib)
library(plotly)
## add other libraries
#### DIRECTORIES ####
getwd()
working_dir = "C:/Users/Utente/Documents/GitHub/Progetto_DigitalM"
data_dir = "C:/Users/Utente/Desktop/Web_marketing/Data"
setwd(working_dir)
#### EXECUTION FULL PIPELINE ####
PIPELINE_scripts <- c(
'B01_ingestion.R'
, 'C01_preparation_df1.R'
, 'C02_preparation_df2.R'
, 'C03_preparation_df3.R'
, 'C04_preparation_df4.R'
, 'C05_preparation_df5.R'
, 'C06_preparation_df6.R'
, 'C07_preparation_df7.R'
## add other scripts
)
for(i in PIPELINE_scripts){
source(i, echo = TRUE)
}
#writeLines(capture.output(sessionInfo()), "sessionInfo.txt")
ggplotly(plot_df1_dist_codfid)
ggplotly(plot_d)
ggplotly(IL)
df7_avgil <- df_7_persone %>% group_by(COD_REPARTO) %>%
summarise(IMPORTO_MEDIO = mean(IMPORTO_LORDO))
df7_avgil
df7_avgil [which.max(df7_avgil$IMPORTO_MEDIO),]
df7_avgil [which.min(df7_avgil$IMPORTO_MEDIO),]
df7_avgsc <- df_7_persone %>% filter(DIREZIONE==1)  %>% group_by(COD_REPARTO) %>%
summarise(SCONTO_MEDIO = mean(SCONTO))
df7_avgsc[which.max(df7_avgsc$SCONTO_MEDIO),]
df7_avgsc[which.min(df7_avgsc$SCONTO_MEDIO),]
IL<-ggplot(df7_avgil,aes(x=COD_REPARTO,y=IMPORTO_MEDIO))+
geom_bar(stat = "identity",fill="red")+
theme_minimal()
ggplotly(IL)
SC<-ggplot(df7_avgsc,aes(x=COD_REPARTO,y=SCONTO_MEDIO))+
geom_bar(stat = "identity",fill="blue")+
theme_minimal()
ggplotly(SC)
df7_purch <- df_7_persone %>% filter(DIREZIONE == 1) %>%
group_by(ID_CLI) %>%
summarise(TOT_ACQUISTI = n_distinct(ID_SCONTRINO)) %>%
arrange(desc(TOT_ACQUISTI))
df7_sub_purch <- df7_purch %>%
mutate(CATEGORIA = case_when((TOT_ACQUISTI>=1) & (TOT_ACQUISTI<10) ~ "meno di 10",
(TOT_ACQUISTI>=10) & (TOT_ACQUISTI<25) ~ "da 10 a 25",
(TOT_ACQUISTI>=25) & (TOT_ACQUISTI<50) ~ "da 25 a 50",
(TOT_ACQUISTI>=50) & (TOT_ACQUISTI<100) ~ "da 50 a 100",
(TOT_ACQUISTI>=100) ~ "pi첫 di 100"))
df7_sub_purch <- df7_sub_purch %>%
mutate(CAT = factor(CATEGORIA,levels=c("meno di 10","da 10 a 25",
"da 25 a 50","da 50 a 100",
"pi첫 di 100"))) %>%
group_by(CAT) %>%
summarise(TOT = n_distinct(ID_CLI)) %>%
mutate(PERC_CLIENTI = TOT/sum(TOT),
CUM_PERC_CLIENTI = cumsum(PERC_CLIENTI))
df7_sub_purch
plot_df7_sub_purch <- ggplot(df7_sub_purch,aes(CAT,TOT))+
geom_bar(fill="red4",stat = "identity",width=0.4)+
xlab("N째 acquisti")+
ylab("N째 clienti")
plot_df7_sub_purch
df6_dist_daystoopen_vs_cumulate <- df6_dist_daystoopen %>%
arrange(AVG_DAYS_TO_OPEN) %>%
mutate(PERCENT_COVERED = cumsum(TOT_CLIs)/sum(TOT_CLIs))
## plot aggregate
plot_df6_dist_daystoopen_vs_cumulate <- (
ggplot(data=df6_dist_daystoopen_vs_cumulate %>%
filter(AVG_DAYS_TO_OPEN < 14)
, aes(x=AVG_DAYS_TO_OPEN, y=PERCENT_COVERED)) +
geom_line() +
geom_point() +
scale_x_continuous(breaks=seq(0,14,2), minor_breaks=0:14) +
theme_minimal()
)
ggplotly(plot_df6_dist_daystoopen_vs_cumulate)
dist_df6_num_opens_prep <- df6_dist_num_opens %>%
mutate(AVG_OPENs = case_when(AVG_OPENs==1 ~ "One-time",
(AVG_OPENs==2) ~ "2 times",
(AVG_OPENs >2)~ "More than 2"))
dist_df6_num_opens <- as.data.frame(table(dist_df6_num_opens_prep$AVG_OPENs))
dist_df6_num_opens
## plot
plot_dist_df6_num_opens <- ggplot(dist_df6_num_opens,aes(Var1,Freq)) +
geom_bar(stat = "identity",fill="steelblue")+
xlab("Number of openes") + ylab("Number of mails")
theme_minimal()
ggplotly(plot_dist_df6_num_opens)
install.packages("plyr")
library(arules)
library(arulesViz)
library(plyr)
library(RColorBrewer)
data_mba <- df_7_persone %>% filter(IMPORTO_LORDO > 0)
itemList <- ddply(data_mba,c("ID_CLI","TIC_DATETIME"),function(df1)paste(df1$ID_ARTICOLO, collapse = ","))
itemList$ID_CLI <- NULL
itemList$TIC_DATETIME <- NULL
colnames(itemList) <- c("items")
write.csv(itemList,"market_basket.csv", quote = FALSE, row.names = TRUE)
tr <- read.transactions('market_basket.csv', format = 'basket', sep=',')
tr
summary(tr)
itemFrequencyPlot(tr, topN=15, type="relative",col=brewer.pal(8,'Spectral'),main="Relative Item Frequency Plot")
rules <- apriori(tr, parameter = list(supp=0.001, conf=0.8))
rules <- sort(rules, by='confidence', decreasing = TRUE)
summary(rules)
#The total numer of rules is 27
#A length of 3 items has the most rules (14) and length of 2 items have
#the lowest number of rules (4)
inspect(rules)
# 95,6% of the customers who bought '{32078795,32079082,32842551} also bought {32079103}
ggplotly(plot(rules,method="two-key plot"))
#The above plot shows that rules with high lift have low support.
topRules <- rules[1:10]
plot(topRules, method="graph",engine = "htmlwidget")
plot(topRules, method = "grouped")
df_3_aziende <- merge( df_3_cli_address_clean, id_aziende_indirizzo, by="ID_ADDRESS")
id_aziende_indirizzo <- as.data.frame(df_2_aziende$ID_ADDRESS)
colnames(id_aziende_indirizzo) <- "ID_ADDRESS"
df_3_aziende <- merge( df_3_cli_address_clean, id_aziende_indirizzo, by="ID_ADDRESS")
View(df_3_aziende)
df1_aziende_codfid_ld <- df_1_aziende %>%
group_by(substring(LAST_DT_ACTIVE,1,7)) %>%
dplyr::summarize(TOT_CLIs = n_distinct(ID_CLI)) %>%
mutate(PERCENT = TOT_CLIs/sum(TOT_CLIs)) %>%
arrange(desc(PERCENT)) %>%
rename(Mesi = `substring(LAST_DT_ACTIVE, 1, 7)`)
df1_aziende_codfid_ld
df_1_aziende <- df_1_cli_fid_clean %>%
filter(LAST_COD_FID == 'PREMIUM BIZ' | LAST_COD_FID == 'STANDARD BIZ')
df1_aziende_codfid_ld <- df_1_aziende %>%
group_by(substring(LAST_DT_ACTIVE,1,7)) %>%
dplyr::summarize(TOT_CLIs = n_distinct(ID_CLI)) %>%
mutate(PERCENT = TOT_CLIs/sum(TOT_CLIs)) %>%
arrange(desc(PERCENT)) %>%
rename(Mesi = `substring(LAST_DT_ACTIVE, 1, 7)`)
df1_aziende_codfid_ld
df1_aziende_codfid_ld <- df_1_aziende %>%
group_by(substring(LAST_DT_ACTIVE,1,7)) %>%
dplyr::summarize(TOT_CLIs = n_distinct(ID_CLI)) %>%
mutate(PERCENT = TOT_CLIs/sum(TOT_CLIs)) %>%
arrange(desc(PERCENT)) %>%
rename(Mesi = `substring(LAST_DT_ACTIVE, 1, 7)`)
remove.packages("plyr", lib="~/R/win-library/4.0")
